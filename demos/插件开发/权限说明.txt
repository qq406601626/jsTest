1、tabs权限：可以读取所有tabs的敏感信息。在安装时会提示用户。不能让你的扩展程序在网页中注入内容脚本或修改 DOM。
2、activeTab权限：可以读取当前激活的tab页的敏感信息。不会触发用户提示。可以在你的扩展程序在网页中注入内容脚本或修改 DOM。
3、host_permissions权限：允许你的扩展程序的 Service Worker 或扩展程序页面对匹配模式的来源进行跨域 XMLHttpRequest 或 fetch 请求，这让你的扩展程序可以直接从这些网站获取数据。
                        如果与 cookies API 权限结合，可以访问指定主机的 cookie。
                        使用 chrome.webRequest API 监视、阻止或修改匹配主机的网络请求。
                        读取匹配主机模式的标签页的敏感属性 ，即使没有 tabs 权限。这是因为 host_permissions 是一个更强大、更包罗万象的权限。
                        它不会隐式授予对所有 Chrome API 的访问权限。例如，要使用 chrome.storage，你仍然需要 storage 权限。
                        它不会授予访问不匹配指定主机模式的标签页的权限。
                        当用户安装带有 host_permissions 的扩展程序时，他们会看到非常强烈的警告，例如**“读取和更改您访问的网站上的所有数据”（如果使用 <all_urls>）或“读取和更改您在 [特定网站] 上的数据”**。这是一个重要的用户警告，可能会阻止安装。


如何选择合适的权限？
1、优先选择 activeTab：如果你的扩展程序只需在用户点击图标时，对当前页面进行操作，【那么强烈推荐使用 activeTab 权限。它会临时授予当前标签页的主机权限，且不会出现强烈的隐私警告】。
2、使用 tabs 进行标签页管理：如果你的扩展程序需要监控或列出所有打开标签页的 URL 和标题用于管理目的，但不需要注入到其中，那么 tabs 权限是合适的。
3、当必须直接与网页内容交互时，使用 host_permissions：如果你的扩展程序核心功能需要修改网页、从特定网站获取数据或使用强大的网络监控 API，那么 host_permissions 是必要的。但请务必准备好应对更强烈的用户警告。

总结：host_permissions权限拥有最多的权限功能。详见权限总结.png。



如果你需要访问所有网站，可以使用 "<all_urls>" 或 "*://*/*"，这包括 http://*/* 和 https://*/*。
